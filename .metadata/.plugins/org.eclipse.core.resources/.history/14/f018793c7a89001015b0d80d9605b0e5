package com.bank.tester;

import com.bank.core.*;
import java.util.Scanner;

public class TestBanking {

	public static void main(String[] args) {
		
//		SavingAccount savingAccount = new SavingAccount(101, 10000.0, "Aditya", "1234567890", 5.0);
//        CurrentAccount currentAccount = new CurrentAccount(102, 5000.0, "Abhay", "0987654321", 200.0);
//
//        System.out.println("=== Saving Account Summary ===");
//        System.out.println(savingAccount.getAccountSummary());
//        savingAccount.deposit(200);
//        savingAccount.withdraw(150);
//        savingAccount.applyInterest();
//        System.out.println(savingAccount.getAccountSummary());
//
//        System.out.println("\n=== Current Account Summary ===");
//        System.out.println(currentAccount.getAccountSummary());
//        currentAccount.deposit(300);
//        currentAccount.withdraw(7000); // succeed
//        currentAccount.withdraw(2000); // fail
//        currentAccount.useOverdraftFacility();
//        System.out.println(currentAccount.getAccountSummary());
        
        Scanner sc = new Scanner(System.in);
        BankAccount[] accounts = new BankAccount[sc.nextInt()];
        //add menu options
        System.out.println("1. Create Saving Account");
        System.out.println("2. Create Current Account");
        System.out.println("3. Deposit");
        System.out.println("4. Withdraw");
        System.out.println("5. Print Account Summary");
        System.out.println("6. Exit");
        int choice;
        int index = 0;
        do {    
            System.out.print("Enter your choice: ");
            choice = sc.nextInt();
            switch (choice) {
                case 1:
                    System.out.print("Enter account number, initial balance, customer name, phone number, interest rate: ");
                    accounts[index++] = new SavingAccount(sc.nextInt(), sc.nextDouble(), sc.next(), sc.next(), sc.nextDouble());
                    break;
                case 2:
                    System.out.print("Enter account number, initial balance, customer name, phone number, overdraft limit: ");
                    accounts[index++] = new CurrentAccount(sc.nextInt(), sc.nextDouble(), sc.next(), sc.next(), sc.nextDouble());
                    break;
                case 3:
                    System.out.print("Enter account index and deposit amount: ");
                    int accIndex = sc.nextInt();
                    double depositAmount = sc.nextDouble();
                    if (accIndex < index) {
                        accounts[accIndex].deposit(depositAmount);
                    } else {
                        System.out.println("Invalid account index.");
                    }
                    break;
                case 4:
                    System.out.print("Enter account index and withdraw amount: ");
                    accIndex = sc.nextInt();
                    double withdrawAmount = sc.nextDouble();
                    if (accIndex < index) {
                        accounts[accIndex].withdraw(withdrawAmount);
                    } else {
                        System.out.println("Invalid account index.");
                    }
                    break;
                case 5:
                    for (int i = 0; i < index; i++) {
                        System.out.println("Account " + i + " Summary:");
                        System.out.println(accounts[i].getAccountSummary());
                    }
                    break;
                case 6:
                    System.out.println("Exiting...");
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
                    break;     
               
            }
        } while (choice != 5);
        sc.close();
        
	}

}
